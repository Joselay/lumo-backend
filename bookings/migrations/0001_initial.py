# Generated by Django 4.2.23 on 2025-09-03 17:39

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('movies', '0002_showtime'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number_of_seats', models.PositiveIntegerField(help_text='Number of seats booked', validators=[django.core.validators.MinValueValidator(1)])),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount for the booking', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', help_text='Current status of the booking', max_length=10)),
                ('booking_reference', models.CharField(help_text='Unique booking reference number', max_length=20, unique=True)),
                ('seat_numbers', models.JSONField(blank=True, default=list, help_text='List of specific seat numbers (if applicable)')),
                ('base_price_per_seat', models.DecimalField(decimal_places=2, help_text='Base price per seat at time of booking', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total discount applied to booking', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('loyalty_points_used', models.PositiveIntegerField(default=0, help_text='Loyalty points used for discount')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('special_requests', models.TextField(blank=True, help_text='Any special requests from customer')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='accounts.customer')),
                ('showtime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='movies.showtime')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('paypal', 'PayPal'), ('apple_pay', 'Apple Pay'), ('google_pay', 'Google Pay')], help_text='Payment method used', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', help_text='Payment status', max_length=15)),
                ('transaction_id', models.CharField(blank=True, help_text='External payment processor transaction ID', max_length=100)),
                ('processor_response', models.JSONField(blank=True, default=dict, help_text='Response from payment processor')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='bookings.booking')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
